<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hello, Siddhesh Kanawade here</title>
    <link>https://siddheshkanawade.github.io/</link>
    <description>Recent content on Hello, Siddhesh Kanawade here</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Aug 2022 20:46:21 +0530</lastBuildDate><atom:link href="https://siddheshkanawade.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GSoC: Week 8</title>
      <link>https://siddheshkanawade.github.io/posts/week10/</link>
      <pubDate>Fri, 19 Aug 2022 20:46:21 +0530</pubDate>
      
      <guid>https://siddheshkanawade.github.io/posts/week10/</guid>
      <description>Will be updated by weekend</description>
    </item>
    
    <item>
      <title>GSoC: Work Summary till now</title>
      <link>https://siddheshkanawade.github.io/posts/summ/</link>
      <pubDate>Fri, 19 Aug 2022 19:41:19 +0530</pubDate>
      
      <guid>https://siddheshkanawade.github.io/posts/summ/</guid>
      <description>Work Summary till Now Last Updated: 19th August 2022
Task Accomplishment till now Task Description Task Status Time Devoted casbin-grpc The casbin-grpc repository was not maintained in a while and had incomplete code. So I was supposed to maintain the repository. Given to another contributor, I took on to develop axum-casbin-auth. Devoted some time to understand the repository and what is required to do 1 week axum-casbin-auth Implement axum web framework(middleware) with casbin.</description>
    </item>
    
    <item>
      <title>Geoclassifier-Granule.ai</title>
      <link>https://siddheshkanawade.github.io/blogs/geoclassifier/</link>
      <pubDate>Sun, 07 Aug 2022 02:10:49 +0530</pubDate>
      
      <guid>https://siddheshkanawade.github.io/blogs/geoclassifier/</guid>
      <description>Brief Overview of Problem Statement The goal of this challenge is to classify a given geographical feature into one of the six classes.
&amp;lsquo;Demolition&amp;rsquo;: 0 &amp;lsquo;Road&amp;rsquo;: 1 &amp;lsquo;Residential&amp;rsquo;: 2 &amp;lsquo;Commercial&amp;rsquo;: 3 &amp;lsquo;Industrial&amp;rsquo;: 4 &amp;lsquo;Mega Projects&amp;rsquo;: 5 Dataset Analysis The dataset consisted of training and test data. Both the datasets were in .geojson format. The problem statement requires to use CVPR EarthVision dataset. The entire description of the dataset and usage of different Deep Learning technics to produce it can be found on the attached link.</description>
    </item>
    
    <item>
      <title>GSoC: Week 7[Post midterm evaluation]</title>
      <link>https://siddheshkanawade.github.io/posts/week7_1/</link>
      <pubDate>Fri, 05 Aug 2022 01:14:22 +0530</pubDate>
      
      <guid>https://siddheshkanawade.github.io/posts/week7_1/</guid>
      <description>Duration 1st August - 14th August 2022
Tasks: âœ… Axum real-world example:
âœ… add register, delete and update api services âœ… make clippy happy âœ… Merge poem-todo âœ… Ensure all checks pass in Github Actions ðŸŸ© casbin-grpc:
âœ… Management apis ðŸŸ© Resolve error in enforcer.rs, adapter.rs ðŸŸ© Ensure all checks pass in Github Actions Outcomes axum-middleware-example
register, update, delete services added make clippy happy, remove unnecessary commands formatting, clippy happy in poem-todo normalize::TrailingSlash-&amp;gt;TrailingSlash</description>
    </item>
    
    <item>
      <title>GSoC: Week 7[During midterm Evaluation]</title>
      <link>https://siddheshkanawade.github.io/posts/week7/</link>
      <pubDate>Sat, 30 Jul 2022 01:08:39 +0530</pubDate>
      
      <guid>https://siddheshkanawade.github.io/posts/week7/</guid>
      <description>Duration 25th July - 31st July 2022
Tasks: ðŸŸ© Axum real-world example:
âœ… Define routes and api calls. âœ… Draft logic for auth.rs(middleware) âœ… Define structure of main.rs and enforce policies in backend Outcomes axum-middleware-example
api, middleware, routes csv utils, main.rs, server setup
Workflow Define routes and api calls Following functions were to be implemented to make the api calls:
signin() {} register() {} delete_user() {} get_user() {} get_all_user() {} In this week, I was able to draft signin, get_user and get_all_user functions.</description>
    </item>
    
    <item>
      <title>GSoC: Midterm Evaluation</title>
      <link>https://siddheshkanawade.github.io/posts/mideval/</link>
      <pubDate>Tue, 26 Jul 2022 10:15:17 +0530</pubDate>
      
      <guid>https://siddheshkanawade.github.io/posts/mideval/</guid>
      <description>Midterm Evaluation Dates: 25th July, 2022 to 29th July, 2022
Contribution/Task Accomplishment till now Task Description Task Status Estimated/Required Time casbin-grpc The casbin-grpc repository was not maintained in a while and had incomplete code. So I was supposed to maintain the repository. Given to another contributor, I took on to develop axum-casbin-auth. Devoted some time to understand the repository and what is required to do 1 week axum-casbin-auth Implement axum web framework(middleware) with casbin.</description>
    </item>
    
    <item>
      <title>GSoC: Week 6</title>
      <link>https://siddheshkanawade.github.io/posts/week6/</link>
      <pubDate>Sun, 24 Jul 2022 23:57:50 +0530</pubDate>
      
      <guid>https://siddheshkanawade.github.io/posts/week6/</guid>
      <description>Tasks: ðŸŸ© Axum real-world example.
Outcomes axum-middleware-example
utils, user model, user service
Workflow Define Service Error, Response Body and Constant messages After refering to actix-middleware-example developed by Eason Chai, I understood the basic workflow and skeleton of the example. I too defined a Service Error, one similar in actix-middleware-example to generalise the error and error response.
pub struct ServiceError { pub http_status: StatusCode, pub body: ResponseBody&amp;lt;String&amp;gt;, } impl ServiceError { pub fn new(http_status: StatusCode, message: String) -&amp;gt; ServiceError { ServiceError { http_status, body: ResponseBody { message, data: String::new(), }, } } pub fn response(&amp;amp;self) -&amp;gt; http::Result&amp;lt;Response&amp;lt;&amp;amp;ResponseBody&amp;lt;String&amp;gt;&amp;gt;&amp;gt; { Response::builder().</description>
    </item>
    
    <item>
      <title>GSoC: Week 5</title>
      <link>https://siddheshkanawade.github.io/posts/week5/</link>
      <pubDate>Fri, 15 Jul 2022 22:43:56 +0530</pubDate>
      
      <guid>https://siddheshkanawade.github.io/posts/week5/</guid>
      <description>Tasks: âœ… casbin-example respository multiple depencies version conflict resolve ðŸŸ© Real-life example for Axum middleware
Outcomes casbin-example: tokio and async-std conflict resolved fix: Update tokio
axum-middleware-example: filestructure and initial db implementation
Workflow casbin-example Tokio reimport error(after resolving error in actix-casbin and actix-casbin-auth):
error[E0252]: the name `IoError` is defined multiple times --&amp;gt; /home/siddhesh/.cargo/registry/src/github.com-1ecc6299db9ec823/casbin-2.0.9/src/adapter/file_adapter.rs:20:10 | 13 | io::{BufReader, Error as IoError, ErrorKind}, | ---------------- previous import of the type `IoError` here ... 20 | io::{Error as IoError, ErrorKind}, | ^^^^^^^^^^^^^^^^-- | | | `IoError` reimported here | help: remove unnecessary import | = note: `IoError` must be defined only once in the type namespace of this module error[E0252]: the name `ErrorKind` is defined multiple times --&amp;gt; /home/siddhesh/.</description>
    </item>
    
    <item>
      <title>GSoC: Week 3 and 4</title>
      <link>https://siddheshkanawade.github.io/posts/week3n4/</link>
      <pubDate>Sun, 10 Jul 2022 15:35:40 +0530</pubDate>
      
      <guid>https://siddheshkanawade.github.io/posts/week3n4/</guid>
      <description>Tasks: âœ… casbin-rs/example respository maintainence âœ… Add CI to axum middleware âœ… Add tests and examples to axum-casbin-auth
Outcomes casbin-rs/example: actix-fileadapter-rbac, actix-pgsql-simple, ntex-fileadapter-acl error resolved ntex-fileadapter-acl build success actix-middleware-example
Add CI in axum middleware: added workflow
Add tests and examples to axum-casbin-auth: added tests/examples for axum-casbin-auth
Workflow Casbin-rs/examples The repository had the following set of errors when ran for the first time:
error[E0252]: the name `IoError` is defined multiple times --&amp;gt; /Users/macbookair/.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://siddheshkanawade.github.io/about/</link>
      <pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://siddheshkanawade.github.io/about/</guid>
      <description>I am Siddhesh Kanawade, a undergraduate in the discipline of Electrical Engineering at IIT Gandhinagar with minors in Computer Science. Over time, I have developed a particular curiosity in cloud, application development and web security. I am constantly trying to expand my knowledge through online courses and projects. I also deeply enjoy designing and led a team of 15 students for Amalthea, IIT Gandhinagarâ€™s technical summit. To sum it up, I am a tech enthusiast who is eager to learn and contribute to our collective growth.</description>
    </item>
    
  </channel>
</rss>
